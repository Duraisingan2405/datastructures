Rotating an array towards the right
normal impl
  if the rotation is 5 and the length is also 5 means the array came to the original position again so we need to find the modulo rotaio only which is often less than the
  length of the array

  [1,2,3,4,5]
  k = 2
  [5,1,2,3,4]
  [4,5,1,2,3]  //copy 4 5 because the k is 2
  shift the remaining elements [1,2,1,2,3,4]
  adding from temp array [4,5,1,2,3,4]
  for the normal implementation it takes the time complexity of O(n) and the space complexity of 0(k) k order of rotation

optimised implementation
  it takes the time complexity of same as 0(n) and the space complexity of O(1) no auxillary space is used
  [1,2,3,4,5]

  step 1
  reverse the arrary [5,4,3,2,1]
  step 2
  k = 3 so [4,5,3,2,1]
  step 3
  reverse remaining
  [4,5,1,2,3]


Container problem
Question:
Container with most Water - You are given an integer array height of length n.
There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water(depth is constant across containers).
Return the area(that the 2 lines and the X axis make) of container which can store the max amount of water.
Notice that you may not slant the container.


considering this question we have to solutions one is time complexity O(n^2) and space complexity of O(1)

which is the solution which takes all the possiblities


the second one is optimised one considering two pointers one towards left and another towards right
  we will be focused on the comparing the left and right pointer and moving the pointers towards right or left considering two pointers

  if the greater one if right there is no chance to greater in width when moving pointer there is no chance

  if the left one is greater moving the left pointer towards right there is a chance

  check the solution and use pen and paper for better understanding






